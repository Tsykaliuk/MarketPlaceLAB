@using MarketPlaceInfrastructure.Services;
@model MarketPlaceDomain.Model.Product
@{
ViewData["Title"] = Model.Title;
var imagesList = Model.Images?.ToList() ?? new List<MarketPlaceDomain.Model.Image>();
var currentUserId = ViewBag.CurrentUserId as string;

}
<div class="container mt-4 mb-5">
    <div class="row g-4">
    <div class="col-lg-7">
        <div class="image-gallery-container sticky-top" style="top: 20px;">
            <div class="main-image-wrapper shadow-sm rounded mb-3 position-relative overflow-hidden">
                @if (imagesList.Any())
                {
                    <img src="@imagesList.First().ImageUrl"
                         class="main-product-image img-fluid"
                         alt="@Model.Title"
                         id="mainImage">

                    @if (imagesList.Count > 1)
                    {
                        <button class="btn btn-gallery prev" onclick="prevImage()">
                            <i class="bi bi-chevron-left"></i>
                        </button>
                        <button class="btn btn-gallery next" onclick="nextImage()">
                            <i class="bi bi-chevron-right"></i>
                        </button>
                    }
                }
                else
                {
                    <div class="bg-light d-flex align-items-center justify-content-center" style="min-height: 400px;">
                        <i class="bi bi-image text-muted" style="font-size: 4rem;"></i>
                    </div>
                }
            </div>

            @if (imagesList.Count > 1)
            {
                <div class="thumbnail-container d-flex gap-2 flex-wrap">
                    @foreach (var (img, index) in imagesList.Select((img, i) => (img, i)))
                    {
                        <div class="thumbnail-item @(index == 0 ? "active" : "")"
                             data-index="@index"
                             onclick="changeMainImage(@index)">
                            <img src="@img.ImageUrl"
                                 class="thumbnail-image"
                                 alt="Мініатюра @(index + 1)">
                        </div>
                    }
                </div>
            }
        </div>
    </div>

    <div class="col-lg-5">

        <div class="product-info p-3 border rounded mb-3 bg-white shadow-sm">
            <h1 class="h3 fw-bold mb-2">@Model.Title</h1>
            <div class="d-flex justify-content-between align-items-center mb-2">
                <span class="h2 fw-bold text-primary mb-0">@Model.Price.ToString("N0") ₴</span>
                <span class="badge bg-success">@Model.Status.GetDisplayName()</span>
            </div>
            <small class="text-muted">Опубліковано: @Model.CreatedAt.ToString("dd MMMM yyyy р.")</small>
        </div>

            <div class="action-buttons p-3 border rounded mb-3 bg-white shadow-sm">
                @if (User.Identity.IsAuthenticated)
                {
                    @if (Model.UserId == currentUserId)
                    {
                        <div class="alert alert-secondary text-center mb-0" role="alert">
                            <i class="bi bi-person-check-fill me-2"></i>Це ваш товар
                        </div>
                        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-outline-secondary w-100 mt-2"><i class="bi bi-pencil"></i> Редагувати товар</a>
                    }
                    else
                    {
                        <a asp-controller="Orders"
                           asp-action="Create"
                           asp-route-productId="@Model.Id"
                           class="btn btn-danger btn-lg w-100 mb-2">
                            <i class="bi bi-cart-check me-2"></i>Оформити замовлення
                        </a>
                    }
                }
                else
                {
                    <a asp-area="Identity" asp-page="/Account/Login"
                       class="btn btn-danger btn-lg w-100 mb-2">
                        Увійдіть, щоб замовити
                    </a>
                }
            </div>


        <div class="seller-info p-3 border rounded mb-3 bg-light">
            <h5 class="mb-3">Продавець</h5>
            <div class="d-flex align-items-center">
                <i class="bi bi-person-circle text-muted me-3" style="font-size: 2.5rem;"></i>
                <div>
                    <div class="fw-bold">@Model.User?.Surname @Model.User?.Name</div>
                    <small class="d-block text-muted">@Model.User?.Email</small>
                    <small class="d-block text-muted">@Model.User?.PhoneNumber</small>
                </div>
            </div>
        </div>


        <div class="description p-3 border rounded mb-3 bg-white shadow-sm">
            <div>
                <span class="text-muted">Категорія:</span>
                <strong class="ms-1">@Model.Category?.Name</strong>
            </div>
            <hr class="my-3">
            <h5 class="mb-3"><i class="bi bi-card-text me-2"></i>Опис</h5>
            <p style="white-space: pre-wrap;">@Model.Description</p>
        </div>

        <div class="d-flex justify-content-between align-items-center mt-3">
            <a asp-action="Index" class="btn btn-link text-secondary text-decoration-none px-0">
                <i class="bi bi-arrow-left me-1"></i> До списку товарів
            </a>
            @if (User.IsInRole("Admin") || Model.UserId == currentUserId)
            {
                <a asp-action="Edit" asp-route-id="@Model.Id"
                   class="btn btn-sm btn-outline-secondary">
                    <i class="bi bi-pencil"></i> Редагувати
                </a>
            }
        </div>

    </div>
    </div>
</div>
@section Styles {
<style>
body {
background-color: #f8f9fa;
}
.main-product-image {
        width: 100%;
        height: auto;
        max-height: 500px;
        object-fit: contain;
        display: block;
    }

    .main-image-wrapper {
        background-color: #fff;
    }

    .thumbnail-container {
        overflow-x: auto;
        padding-bottom: 5px;
    }

    .thumbnail-item {
        width: 70px;
        height: 70px;
        cursor: pointer;
        border: 2px solid #dee2e6;
        transition: border-color 0.2s ease;
        border-radius: 5px;
        overflow: hidden;
        flex-shrink: 0;
    }

        .thumbnail-item.active {
            border-color: #0d6efd;
        }

    .thumbnail-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .btn-gallery {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background-color: rgba(0, 0, 0, 0.4);
        color: white;
        border: none;
        border-radius: 50%;
        width: 40px;
        height: 40px;
        font-size: 1.2rem;
        line-height: 1;
        padding: 0;
        transition: background-color 0.2s ease;
        z-index: 10;
    }

        .btn-gallery:hover {
            background-color: rgba(0, 0, 0, 0.7);
            color: white;
        }

        .btn-gallery.prev {
            left: 10px;
        }

        .btn-gallery.next {
            right: 10px;
        }

    .product-info h1 {
        line-height: 1.2;
    }

    .product-info .text-primary {
        color: #dc3545 !important;
    }

    .seller-info {
        background-color: #f0f0f0;
    }

    .description p {
        font-size: 0.95rem;
        line-height: 1.6;
        color: #495057;
    }

    @@media (max-width: 991.98px) {
        .image-gallery-container.sticky-top {
            position: static !important;
            top: auto !important;
        }

        .main-product-image {
            max-height: 400px;
        }
    }
</style>
}
@section Scripts {
<script>
let currentImageIndex = 0;
const images = @Html.Raw(Json.Serialize(imagesList.Select(i => i.ImageUrl)));
const mainImageElement = document.getElementById('mainImage');
const thumbnailItems = document.querySelectorAll('.thumbnail-item');
function updateMainImage(index) {
        if (!images || images.length === 0 || !mainImageElement) return;

        if (index >= images.length) index = 0;
        if (index < 0) index = images.length - 1;

        currentImageIndex = index;
        mainImageElement.src = images[currentImageIndex];
        mainImageElement.alt = `Зображення ${currentImageIndex + 1}`;

        thumbnailItems.forEach((thumb, i) => {
            thumb.classList.toggle('active', i === currentImageIndex);
            if (i === currentImageIndex) {
                thumb.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'nearest' });
            }
        });
    }

    function prevImage() {
        updateMainImage(currentImageIndex - 1);
    }

    function nextImage() {
        updateMainImage(currentImageIndex + 1);
    }

    function changeMainImage(index) {
        updateMainImage(index);
    }

    document.addEventListener('DOMContentLoaded', () => {
        if (images.length > 0 && mainImageElement && !mainImageElement.getAttribute('src')) {
             updateMainImage(0);
        } else if (images.length === 0 && mainImageElement) {
             mainImageElement.style.display = 'none';
        }
    });
</script>
}